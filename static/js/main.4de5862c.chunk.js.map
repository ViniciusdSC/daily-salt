{"version":3,"sources":["app/config/theme.ts","spent-type/store/index.ts","spent/store/index.ts","user-config/store/index.ts","app/components/breadcrumbs/store.ts","app/store/index.tsx","app/components/header/styles.ts","app/components/header/index.tsx","app/components/drawer/styles.ts","app/components/drawer/index.tsx","app/components/breadcrumbs/hooks.ts","user-config/hooks.ts","spent/hooks.ts","app/components/paper/styles.ts","app/components/paper/index.tsx","app/pages/dashboard/styles.tsx","app/pages/dashboard/index.tsx","spent-type/components/form/styles.ts","spent-type/components/form/index.tsx","spent-type/hooks.ts","spent-type/components/form/hooks.ts","spent-type/pages/create/index.tsx","spent-type/pages/edit/index.tsx","app/components/datatable/toolbar-select/index.tsx","spent-type/pages/home/index.tsx","spent-type/pages/view/styles.ts","spent-type/routes.ts","spent-type/pages/view/index.tsx","spent/components/form/styles.ts","spent/components/form/index.tsx","spent/components/form/hooks.ts","spent/pages/create/index.tsx","spent/pages/edit/index.tsx","spent/components/table/toolbar/index.tsx","spent/pages/home/index.tsx","spent/pages/view/styles.tsx","spent/routes.ts","spent/pages/view/index.tsx","app/components/number-format/money-format/index.tsx","user-config/components/form/styles.ts","user-config/components/form/index.tsx","user-config/pages/edit/index.tsx","user-config/components/form/hooks.ts","user-config/pages/home/styles.ts","user-config/routes.ts","user-config/pages/home/index.tsx","app/components/routes/index.tsx","app/styles.ts","app/components/breadcrumbs/styles.ts","app/components/breadcrumbs/index.tsx","app/index.tsx","index.tsx"],"names":["theme","createMuiTheme","palette","type","primary","main","secondary","spentTypeSlice","createSlice","name","initialState","list","reducers","store","state","action","push","id","uuidv4","payload","update","index","findIndex","model","delete","filter","spentType","set","actions","spentSlice","tableTab","accumulatedBalance","daily","weekly","monthly","createdAt","Date","setTableTab","setDailyAccumulatedBalance","setWeeklyAccumulatedBalance","setMonthlyAccumulatedBalance","userConfigSlice","dailyGoal","weekGoal","mounthGoal","repeatableGoal","appBreadcrumbSlice","current","setCurrent","setList","rootReducer","combineReducers","reducer","spent","userConfig","appBreadcrumb","persistedReducer","persistReducer","key","storage","blacklist","createStore","persistor","persistStore","useAppSelector","useSelector","useAppDispatch","useDispatch","useStyles","makeStyles","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","color","appBarShift","marginLeft","width","enteringScreen","toolbar","paddingRight","menuButton","marginRight","menuButtonHidden","display","title","flexGrow","AppHeader","drawerState","setDrawerState","classes","AppBar","elevation","position","className","clsx","Toolbar","IconButton","edge","aria-label","onClick","Typography","component","variant","noWrap","whiteSpace","closedDrawer","overflowX","spacing","toolbarIcon","alignItems","justifyContent","padding","mixins","AppDrawer","history","useHistory","Drawer","paper","open","Divider","List","ListItem","button","ListItemIcon","ListItemText","useSetBreadcrumbs","dispatch","useEffect","AppBreadcrumbActions","useUserConfig","useDeleteSpent","a","SpentActions","useSpents","useSpentById","find","item","Error","useSpentTableTab","margin","toolbarTitle","content","AppPaper","children","Paper","square","root","chip","spentPeriodText","flex","AppDashboard","React","useState","period","setPeriod","currentWeeklySpentValue","models","setModels","spents","today","minDay","getDate","getDay","itemDate","mode","getMonth","getFullYear","map","value","reduce","prev","useCurrentWeeklySpentValue","currentDailySpentValue","useCurrentDailySpentValue","currentMounthlySpentValue","useCurrentMonthlySpentValue","repeatableSpentValue","useRepeatableSpentValue","accumulatedDailyBalance","goal","targetDate","setDate","getTime","useAccumulatedDailyBalance","accumulatedWeeklyBalance","useAccumulatedWeeklyBalance","accumulatedMonthlyBalance","useAccumulatedMonthlyBalance","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","style","marginTop","Grid","container","xs","Chip","label","md","toFixed","replace","submit","float","SpentTypeForm","formik","onSubmit","handleSubmit","TextField","fullWidth","onChange","handleChange","values","helperText","errors","error","Boolean","Button","useDeleteSpentType","SpentTypeActions","useSpentTypeById","useSpentTypeFormik","useFormik","initialValues","SpentTypeCreate","storeSpentType","useStoreSpentType","to","SpentTypeEdit","useParams","updateSpentType","useUpdateSpentType","setValues","AppToolbarSelect","displayData","data","onDelete","onEdit","setSelectedRows","length","row","_data","dataIndex","rows","_d","includes","_row","columns","options","SpentTypeHome","deleteSpentType","Tooltip","serverSide","search","customToolbar","customToolbarSelect","ids","forEach","_id","listTitle","marginBottom","backgroundColor","background","SpentTypeRoutes","path","Component","Actions","startIcon","aria-labelledby","SpentForm","query","setQuery","spentTypes","indexOf","useFilterSpentTypes","Autocomplete","getOptionLabel","option","renderInput","params","target","el","setFieldValue","freeSolo","select","event","MenuItem","useSpentFormik","spentTypeId","SpentCreate","storeSpent","useStoreSpent","SpentEdit","updateSpent","useUpdateSpent","SpentTableToolbar","props","useSetSpentTableTab","Tabs","indicatorColor","textColor","newValue","Tab","SpentHome","spentTableTab","useSpentTable","deleteSpent","components","TableToolbar","SpentRoutes","AppMoneyFormat","inputRef","others","getInputRef","onValueChange","thousandSeparator","isNumericString","prefix","UserConfigForm","InputProps","inputComponent","UserConfigEdit","setUserConfig","UserConfigActions","useSetUserConfig","useUserConfigFormik","height","fontSize","UserConfigRoutes","currentMounth","dailyGoalInFullMounth","dailyGoalInRelativeMounth","weekGoalInFullMounth","total","Card","CardContent","gutterBottom","AppRoutes","overflow","appBarSpacer","paddingTop","paddingBottom","link","textDecoration","grey","icon","AppBreadcrumbs","breadcrumbList","breadcrumbCurrent","Breadcrumbs","separator","breadcrumbItem","App","openDrawer","setOpenDrawer","console","log","process","basename","Container","maxWidth","ReactDOM","render","loading","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4de5862c.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#00897b',\n    },\n    secondary: {\n      main: '#5e35b1',\n    },\n  },\n});\n\nexport default theme;\n\nexport const drawerWidth = 240;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { SpentTypeInterface } from 'spent-type/interfaces';\nimport { SpentTypeFormValues } from 'spent-type/components/form/interfaces';\n\ninterface SpentTypeState {\n  list: SpentTypeInterface[];\n}\n\nconst initialState: SpentTypeState = {\n  list: [],\n};\n\nexport const spentTypeSlice = createSlice({\n  name: 'spent-type',\n  initialState,\n  reducers: {\n    store(state, action: PayloadAction<SpentTypeFormValues>) {\n      state.list.push({\n        id: uuidv4(),\n        ...action.payload,\n      });\n    },\n    update(state, action: PayloadAction<SpentTypeInterface>) {\n      const index = state.list.findIndex(\n        (model) => model.id === action.payload.id,\n      );\n\n      if (index >= 0) {\n        state.list[index] = action.payload;\n      }\n    },\n    delete(state, action: PayloadAction<string>) {\n      state.list = [...state.list].filter(\n        (spentType) => spentType.id !== action.payload,\n      );\n    },\n    set(state, action: PayloadAction<SpentTypeInterface[]>) {\n      state.list = action.payload;\n    },\n  },\n});\n\nexport const { actions } = spentTypeSlice;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { AccumulatedBalance, SpentInterface, SpentTableTabType } from 'spent/interfaces';\nimport { SpentFormValues } from 'spent/components/form/interfaces';\n\ninterface SpentState {\n  list: SpentInterface[];\n  tableTab: SpentTableTabType;\n  accumulatedBalance: AccumulatedBalance;\n}\n\nconst initialState: SpentState = {\n  list: [],\n  tableTab: 'daily',\n  accumulatedBalance: {\n    daily: 0,\n    weekly: 0,\n    monthly: 0,\n  },\n};\n\nexport const spentSlice = createSlice({\n  name: 'spent',\n  initialState,\n  reducers: {\n    store(state, action: PayloadAction<SpentFormValues>) {\n      state.list.push({\n        id: uuidv4(),\n        createdAt: new Date(),\n        ...action.payload,\n      });\n    },\n    update(state, action: PayloadAction<Omit<SpentInterface, 'createdAt'>>) {\n      const index = state.list.findIndex(\n        (model) => model.id === action.payload.id,\n      );\n\n      if (index >= 0) {\n        state.list[index] = {\n          ...action.payload,\n          createdAt: state.list[index].createdAt,\n        };\n      }\n    },\n    delete(state, action: PayloadAction<string>) {\n      state.list = [...state.list].filter(\n        (spentType) => spentType.id !== action.payload,\n      );\n    },\n    set(state, action: PayloadAction<SpentInterface[]>) {\n      state.list = action.payload;\n    },\n    setTableTab(state, action: PayloadAction<SpentTableTabType>) {\n      state.tableTab = action.payload;\n    },\n    setDailyAccumulatedBalance(state, action: PayloadAction<number>) {\n      state.accumulatedBalance.daily = action.payload;\n    },\n    setWeeklyAccumulatedBalance(state, action: PayloadAction<number>) {\n      state.accumulatedBalance.weekly = action.payload;\n    },\n    setMonthlyAccumulatedBalance(state, action: PayloadAction<number>) {\n      state.accumulatedBalance.monthly = action.payload;\n    },\n  },\n});\n\nexport const { actions } = spentSlice;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { UserConfigInterface } from 'user-config/interfaces';\n\ninterface UserConfigState {\n  model: UserConfigInterface\n}\n\nconst initialState: UserConfigState = {\n  model: {\n    dailyGoal: 0,\n    weekGoal: 0,\n    mounthGoal: 0,\n    repeatableGoal: 0,\n  },\n};\n\nexport const userConfigSlice = createSlice({\n  name: 'user-config',\n  initialState,\n  reducers: {\n    set(state, action: PayloadAction<UserConfigInterface>) {\n      state.model = action.payload;\n    },\n  },\n});\n\nexport const { actions } = userConfigSlice;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AppBreadcrumbItem } from './interfaces';\n\ninterface AppBreadcrumbState {\n  list: AppBreadcrumbItem[];\n  current: string;\n}\n\nconst initialState: AppBreadcrumbState = {\n  list: [],\n  current: '',\n};\n\nexport const appBreadcrumbSlice = createSlice({\n  name: 'app-breadcrumb',\n  initialState,\n  reducers: {\n    setCurrent(state, action: PayloadAction<string>) {\n      state.current = action.payload;\n    },\n    setList(state, action: PayloadAction<AppBreadcrumbItem[]>) {\n      state.list = action.payload;\n    },\n  },\n});\n\nexport const { actions } = appBreadcrumbSlice;\n","import { combineReducers, createStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { spentTypeSlice } from 'spent-type/store';\nimport { spentSlice } from 'spent/store';\nimport { userConfigSlice } from 'user-config/store';\nimport { appBreadcrumbSlice } from 'app/components/breadcrumbs/store';\n\nconst rootReducer = combineReducers({\n  spentType: spentTypeSlice.reducer,\n  spent: spentSlice.reducer,\n  userConfig: userConfigSlice.reducer,\n  appBreadcrumb: appBreadcrumbSlice.reducer,\n});\n\nconst persistedReducer = persistReducer(\n  {\n    key: 'root',\n    storage,\n    blacklist: ['appBreadcrumb'],\n  },\n  rootReducer,\n);\n\nexport const store = createStore(persistedReducer);\n\nexport const persistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n","import { makeStyles } from '@material-ui/core';\nimport { drawerWidth } from 'app/config/theme';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    color: '#fff',\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\n// icons\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport useStyles from './styles';\n\ninterface Props {\n  drawerState: boolean;\n  setDrawerState(state: boolean): void;\n}\n\nconst AppHeader: React.FC<Props> = ({ drawerState, setDrawerState }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      color=\"inherit\"\n      elevation={0}\n      position=\"absolute\"\n      className={clsx(classes.appBar, drawerState && classes.appBarShift)}\n    >\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={() => setDrawerState(true)}\n          className={clsx(\n            classes.menuButton,\n            drawerState && classes.menuButtonHidden,\n          )}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}\n        >\n          Daily Salt\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default AppHeader;\n","import { makeStyles } from '@material-ui/core';\nimport { drawerWidth } from 'app/config/theme';\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  closedDrawer: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// icons\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './styles';\n\ninterface Props {\n  drawerState: boolean;\n  setDrawerState(state: boolean): void;\n}\n\nconst AppDrawer: React.FC<Props> = ({ setDrawerState, drawerState }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawer, !drawerState && classes.closedDrawer),\n      }}\n      open={drawerState}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={() => setDrawerState(false)}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        <ListItem button onClick={() => history.push('/')}>\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n        <ListItem button onClick={() => history.push('/spent-type')}>\n          <ListItemIcon>\n            <BookmarksIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Spent Type\" />\n        </ListItem>\n        <ListItem button onClick={() => history.push('/spent')}>\n          <ListItemIcon>\n            <PaymentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Spent\" />\n        </ListItem>\n        <ListItem button onClick={() => history.push('/user-config')}>\n          <ListItemIcon>\n            <SettingsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Settings\" />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\n\nexport default AppDrawer;\n","import { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from 'app/store';\nimport { AppBreadcrumbItem } from './interfaces';\nimport { actions as AppBreadcrumbActions } from './store';\n\nexport function useAppBreadcrumbList() {\n  return useAppSelector(({ appBreadcrumb }) => appBreadcrumb.list);\n}\n\nexport function useAppBreadcrumbCurrent() {\n  return useAppSelector(({ appBreadcrumb }) => appBreadcrumb.current);\n}\n\nexport function useSetBreadcrumbs(list: AppBreadcrumbItem[], current: string) {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(AppBreadcrumbActions.setCurrent(current));\n    dispatch(AppBreadcrumbActions.setList(list));\n  }, [list, current]);\n}\n","import { useAppDispatch, useAppSelector } from 'app/store';\nimport { UserConfigInterface } from './interfaces';\nimport { actions as UserConfigActions } from './store';\n\nexport function useUserConfig() {\n  return useAppSelector(({ userConfig }) => userConfig.model);\n}\n\nexport function useSetUserConfig() {\n  const dispatch = useAppDispatch();\n\n  return async function (userConfig: UserConfigInterface) {\n    dispatch(UserConfigActions.set(userConfig));\n  };\n}\n","import { useAppDispatch, useAppSelector } from 'app/store';\nimport { useState, useEffect } from 'react';\nimport { useUserConfig } from 'user-config/hooks';\nimport { SpentFormValues } from './components/form/interfaces';\nimport { SpentInterface, SpentTableTabType } from './interfaces';\nimport { actions as SpentActions } from './store';\n\nexport function useStoreSpent() {\n  const dispatch = useAppDispatch();\n\n  return async function (values: SpentFormValues) {\n    dispatch(SpentActions.store(values));\n  };\n}\n\nexport function useUpdateSpent() {\n  const dispatch = useAppDispatch();\n\n  return async function (id: string, values: SpentFormValues) {\n    dispatch(\n      SpentActions.update({\n        id,\n        ...values,\n      }),\n    );\n  };\n}\n\nexport function useDeleteSpent() {\n  const dispatch = useAppDispatch();\n\n  return async function (id: string) {\n    dispatch(SpentActions.delete(id));\n  };\n}\n\nexport function useSetSpent() {\n  const dispatch = useAppDispatch();\n\n  return async function (spents: SpentInterface[]) {\n    dispatch(SpentActions.set(spents));\n  };\n}\n\nexport function useSpents() {\n  return useAppSelector(({ spent }) => spent.list);\n}\n\nexport function useSpentById(id: string) {\n  const model = useAppSelector(({ spent }) => spent.list.find((item) => item.id === id));\n\n  if (!model) {\n    throw new Error('Spent not found');\n  }\n\n  return model;\n}\n\nexport function useSpentTableTab() {\n  return useAppSelector(({ spent }) => spent.tableTab);\n}\n\nexport function useSetSpentTableTab() {\n  const dispatch = useAppDispatch();\n\n  return async function (tableTab: SpentTableTabType) {\n    dispatch(SpentActions.setTableTab(tableTab));\n  };\n}\n\nexport function useSpentTable() {\n  const [models, setModels] = useState<SpentInterface[]>([]);\n  const spents = useSpents();\n  const spentTableTab = useSpentTableTab();\n\n  useEffect(() => {\n    setModels(spents.filter((item) => (\n      item.mode === spentTableTab || spentTableTab === 'total'\n    )));\n  }, [spentTableTab, spents]);\n\n  return models;\n}\n\nexport function useCurrentDailySpentValue() {\n  const [models, setModels] = useState<SpentInterface[]>([]);\n  const spents = useSpents();\n  const today = new Date();\n\n  useEffect(() => {\n    setModels(spents.filter((item) => {\n      const itemDate = new Date(item.createdAt);\n\n      return (\n        item.mode === 'daily'\n        && itemDate.getDate() === today.getDate()\n        && itemDate.getMonth() === today.getMonth()\n        && itemDate.getFullYear() === today.getFullYear()\n      );\n    }));\n  }, [spents]);\n\n  return models.map((item) => +item.value).reduce((prev, current) => prev + current, 0);\n}\n\nexport function useCurrentWeeklySpentValue() {\n  const [models, setModels] = useState<SpentInterface[]>([]);\n  const spents = useSpents();\n  const today = new Date();\n\n  const minDay = today.getDate() - today.getDay();\n\n  useEffect(() => {\n    setModels(spents.filter((item) => {\n      const itemDate = new Date(item.createdAt);\n\n      return (\n        item.mode === 'weekly'\n        && itemDate.getDate() > minDay\n        && itemDate.getMonth() === today.getMonth()\n        && itemDate.getFullYear() === today.getFullYear()\n      );\n    }));\n  }, [spents]);\n\n  return models.map((item) => +item.value).reduce((prev, current) => prev + current, 0);\n}\n\nexport function useCurrentMonthlySpentValue() {\n  const [models, setModels] = useState<SpentInterface[]>([]);\n  const spents = useSpents();\n  const today = new Date();\n\n  useEffect(() => {\n    setModels(spents.filter((item) => {\n      const itemDate = new Date(item.createdAt);\n\n      return (\n        item.mode === 'monthly'\n        && itemDate.getMonth() === today.getMonth()\n        && itemDate.getFullYear() === today.getFullYear()\n      );\n    }));\n  }, [spents]);\n\n  return models.map((item) => +item.value).reduce((prev, current) => prev + current, 0);\n}\n\nexport function useRepeatableSpentValue() {\n  const [models, setModels] = useState<SpentInterface[]>([]);\n  const spents = useSpents();\n\n  useEffect(() => {\n    setModels(spents.filter((item) => item.mode === 'repeatable'));\n  }, [spents]);\n\n  return models.map((item) => +item.value).reduce((prev, current) => prev + current, 0);\n}\n\nexport function useAccumulatedDailyBalance(period = 30) {\n  const userConfig = useUserConfig();\n  const goal = userConfig.dailyGoal * period;\n  const [models, setModels] = useState<SpentInterface[]>([]);\n  const spents = useSpents();\n  const today = new Date();\n  const targetDate = new Date();\n  targetDate.setDate(targetDate.getDate() - period);\n\n  useEffect(() => {\n    setModels(spents.filter((item) => {\n      const itemDate = new Date(item.createdAt);\n\n      return (\n        item.mode === 'daily'\n        && itemDate.getTime() <= today.getTime()\n        && itemDate.getTime() >= targetDate.getTime()\n      );\n    }));\n  }, [spents]);\n\n  return goal - models.map((item) => +item.value).reduce((prev, current) => prev + current, 0);\n}\n\nexport function useAccumulatedWeeklyBalance(period = 30) {\n  const userConfig = useUserConfig();\n  const goal = (userConfig.weekGoal / 7) * period;\n  const [models, setModels] = useState<SpentInterface[]>([]);\n  const spents = useSpents();\n  const today = new Date();\n  const targetDate = new Date();\n  targetDate.setDate(targetDate.getDate() - period);\n\n  useEffect(() => {\n    setModels(spents.filter((item) => {\n      const itemDate = new Date(item.createdAt);\n\n      return (\n        item.mode === 'weekly'\n        && itemDate.getTime() <= today.getTime()\n        && itemDate.getTime() >= targetDate.getTime()\n      );\n    }));\n  }, [spents]);\n\n  return goal - models.map((item) => +item.value).reduce((prev, current) => prev + current, 0);\n}\n\nexport function useAccumulatedMonthlyBalance(period = 30) {\n  const userConfig = useUserConfig();\n  const goal = (userConfig.mounthGoal / 30) * period;\n  const [models, setModels] = useState<SpentInterface[]>([]);\n  const spents = useSpents();\n  const today = new Date();\n  const targetDate = new Date();\n  targetDate.setDate(targetDate.getDate() - period);\n\n  useEffect(() => {\n    setModels(spents.filter((item) => {\n      const itemDate = new Date(item.createdAt);\n\n      return (\n        item.mode === 'monthly'\n        && itemDate.getTime() <= today.getTime()\n        && itemDate.getTime() >= targetDate.getTime()\n      );\n    }));\n  }, [spents]);\n\n  return goal - models.map((item) => +item.value).reduce((prev, current) => prev + current, 0);\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {},\n  toolbar: {\n    '& .MuiButton-root': {\n      margin: theme.spacing(0, 1),\n    },\n  },\n  toolbarTitle: {\n    marginRight: 'auto',\n  },\n  content: {\n    padding: theme.spacing(0, 3, 3),\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './styles';\n\ninterface Props {\n  title?: string;\n  actions?: React.ReactNode;\n}\n\nconst AppPaper: React.FC<Props> = ({ children, title, actions }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper variant=\"elevation\" className={classes.paper} square>\n      <Toolbar className={classes.toolbar}>\n        <Typography\n          className={classes.toolbarTitle}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          {title}\n        </Typography>\n        {actions}\n      </Toolbar>\n      <div className={classes.content}>{children}</div>\n    </Paper>\n  );\n};\n\nexport default AppPaper;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chip: {\n    margin: '0 1em 0 0',\n  },\n  spentPeriodText: {\n    flex: 1,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\n\nimport { useSetBreadcrumbs } from 'app/components/breadcrumbs/hooks';\nimport { useUserConfig } from 'user-config/hooks';\nimport {\n  useAccumulatedDailyBalance,\n  useCurrentDailySpentValue,\n  useCurrentMonthlySpentValue,\n  useCurrentWeeklySpentValue,\n  useRepeatableSpentValue,\n  useAccumulatedWeeklyBalance,\n  useAccumulatedMonthlyBalance,\n} from 'spent/hooks';\nimport AppPaper from 'app/components/paper';\nimport { Typography } from '@material-ui/core';\nimport useStyles from './styles';\n\nconst AppDashboard: React.FC = () => {\n  const [period, setPeriod] = React.useState(30);\n  const classes = useStyles();\n  const userConfig = useUserConfig();\n  const currentWeeklySpentValue = useCurrentWeeklySpentValue();\n  const currentDailySpentValue = useCurrentDailySpentValue();\n  const currentMounthlySpentValue = useCurrentMonthlySpentValue();\n  const repeatableSpentValue = useRepeatableSpentValue();\n  const accumulatedDailyBalance = useAccumulatedDailyBalance(period);\n  const accumulatedWeeklyBalance = useAccumulatedWeeklyBalance(period);\n  const accumulatedMonthlyBalance = useAccumulatedMonthlyBalance(period);\n\n  useSetBreadcrumbs([], 'Dashboard');\n\n  return (\n    <div>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Type</TableCell>\n              <TableCell align=\"right\">Current</TableCell>\n              <TableCell align=\"right\">Total</TableCell>\n              <TableCell align=\"right\">Balance</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell>Daily</TableCell>\n              <TableCell align=\"right\">{currentDailySpentValue}</TableCell>\n              <TableCell align=\"right\">{userConfig.dailyGoal}</TableCell>\n              <TableCell align=\"right\">{userConfig.dailyGoal - currentDailySpentValue}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Weekly</TableCell>\n              <TableCell align=\"right\">{currentWeeklySpentValue}</TableCell>\n              <TableCell align=\"right\">{userConfig.weekGoal}</TableCell>\n              <TableCell align=\"right\">{userConfig.weekGoal - currentWeeklySpentValue}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Montlhy</TableCell>\n              <TableCell align=\"right\">{currentMounthlySpentValue}</TableCell>\n              <TableCell align=\"right\">{userConfig.mounthGoal}</TableCell>\n              <TableCell align=\"right\">{userConfig.mounthGoal - currentMounthlySpentValue}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Repeatable</TableCell>\n              <TableCell align=\"right\">{repeatableSpentValue}</TableCell>\n              <TableCell align=\"right\">{userConfig.repeatableGoal}</TableCell>\n              <TableCell align=\"right\">{userConfig.repeatableGoal - repeatableSpentValue}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <div\n        style={{\n          marginTop: 10,\n        }}\n      />\n\n      <AppPaper title=\"Accumulated Balance\">\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Chip\n              className={classes.chip}\n              label=\"30 days\"\n              variant={period === 30 ? 'default' : 'outlined'}\n              onClick={() => {\n                setPeriod(30);\n              }}\n            />\n            <Chip\n              className={classes.chip}\n              label=\"60 days\"\n              variant={period === 60 ? 'default' : 'outlined'}\n              onClick={() => {\n                setPeriod(60);\n              }}\n            />\n            <Chip\n              className={classes.chip}\n              label=\"90 days\"\n              variant={period === 90 ? 'default' : 'outlined'}\n              onClick={() => {\n                setPeriod(90);\n              }}\n            />\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <Typography component=\"p\" variant=\"h4\">\n              $\n              {accumulatedDailyBalance.toFixed(2).replace('.', ',')}\n            </Typography>\n            <Typography color=\"textSecondary\" className={classes.spentPeriodText}>\n              Daily\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <Typography component=\"p\" variant=\"h4\">\n              $\n              {accumulatedWeeklyBalance.toFixed(2).replace('.', ',')}\n            </Typography>\n            <Typography color=\"textSecondary\" className={classes.spentPeriodText}>\n              Weekly\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <Typography component=\"p\" variant=\"h4\">\n              $\n              {accumulatedMonthlyBalance.toFixed(2).replace('.', ',')}\n            </Typography>\n            <Typography color=\"textSecondary\" className={classes.spentPeriodText}>\n              Monthly\n            </Typography>\n          </Grid>\n        </Grid>\n      </AppPaper>\n    </div>\n  );\n};\n\nexport default AppDashboard;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  submit: {\n    float: 'right',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { FormikProps } from 'formik';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport useStyles from './styles';\nimport { SpentTypeFormValues } from './interfaces';\n\ninterface Props {\n  formik: FormikProps<SpentTypeFormValues>;\n}\n\nconst SpentTypeForm: React.FC<Props> = ({ formik }) => {\n  const classes = useStyles();\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <TextField\n            label=\"Name\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            name=\"name\"\n            fullWidth\n            onChange={formik.handleChange}\n            value={formik.values.name}\n            helperText={formik.errors?.name}\n            error={Boolean(formik.errors?.name)}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button className={classes.submit} type=\"submit\" variant=\"outlined\">\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport default SpentTypeForm;\n","import { useAppDispatch, useAppSelector } from 'app/store';\nimport { SpentTypeFormValues } from './components/form/interfaces';\nimport { SpentTypeInterface } from './interfaces';\nimport { actions as SpentTypeActions } from './store';\n\nexport function useStoreSpentType() {\n  const dispatch = useAppDispatch();\n\n  return async function (values: SpentTypeFormValues) {\n    dispatch(SpentTypeActions.store(values));\n  };\n}\n\nexport function useUpdateSpentType() {\n  const dispatch = useAppDispatch();\n\n  return async function (id: string, values: SpentTypeFormValues) {\n    dispatch(\n      SpentTypeActions.update({\n        id,\n        ...values,\n      }),\n    );\n  };\n}\n\nexport function useDeleteSpentType() {\n  const dispatch = useAppDispatch();\n\n  return async function (id: string) {\n    dispatch(SpentTypeActions.delete(id));\n  };\n}\n\nexport function useSetSpentType() {\n  const dispatch = useAppDispatch();\n\n  return async function (spentTypes: SpentTypeInterface[]) {\n    dispatch(SpentTypeActions.set(spentTypes));\n  };\n}\n\nexport function useSpentTypes() {\n  return useAppSelector(({ spentType }) => spentType.list);\n}\n\nexport function useFilterSpentTypes(query = '') {\n  return useAppSelector(({ spentType }) => (\n    spentType.list.filter((model) => model.name.indexOf(query) > -1)\n  ));\n}\n\nexport function useSpentTypeById(id: string) {\n  const model = useAppSelector(({ spentType }) => spentType.list.find((item) => item.id === id));\n\n  if (!model) {\n    throw new Error('Spent Type not found');\n  }\n\n  return model;\n}\n","import { useFormik, FormikProps } from 'formik';\nimport { SpentTypeFormValues } from './interfaces';\n\nexport function useSpentTypeFormik({\n  onSubmit,\n}: {\n  onSubmit(values: SpentTypeFormValues): Promise<void>;\n}): FormikProps<SpentTypeFormValues> {\n  return useFormik<SpentTypeFormValues>({\n    initialValues: {\n      name: '',\n    },\n    onSubmit,\n  });\n}\n","import React from 'react';\nimport AppPaper from 'app/components/paper';\nimport SpentTypeForm from 'spent-type/components/form';\nimport { useStoreSpentType } from 'spent-type/hooks';\nimport { useHistory } from 'react-router-dom';\nimport { useSpentTypeFormik } from 'spent-type/components/form/hooks';\nimport { useSetBreadcrumbs } from 'app/components/breadcrumbs/hooks';\n\nconst SpentTypeCreate: React.FC = () => {\n  const storeSpentType = useStoreSpentType();\n  const history = useHistory();\n  const formik = useSpentTypeFormik({\n    async onSubmit(values) {\n      await storeSpentType(values);\n\n      history.push('/spent-type');\n    },\n  });\n\n  useSetBreadcrumbs([\n    { to: '/spent-type', label: 'Spent Type' },\n  ], 'Create');\n\n  return (\n    <AppPaper title=\"New Spent Type\">\n      <SpentTypeForm formik={formik} />\n    </AppPaper>\n  );\n};\n\nexport default SpentTypeCreate;\n","import React from 'react';\nimport AppPaper from 'app/components/paper';\nimport SpentTypeForm from 'spent-type/components/form';\nimport { useSpentTypeById, useUpdateSpentType } from 'spent-type/hooks';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useSpentTypeFormik } from 'spent-type/components/form/hooks';\nimport { useSetBreadcrumbs } from 'app/components/breadcrumbs/hooks';\n\nconst SpentTypeEdit: React.FC = () => {\n  const { id } = useParams<{\n    id: string;\n  }>();\n  const model = useSpentTypeById(id);\n  const updateSpentType = useUpdateSpentType();\n  const history = useHistory();\n\n  const formik = useSpentTypeFormik({\n    async onSubmit(values) {\n      await updateSpentType(id, values);\n      history.push('/spent-type');\n    },\n  });\n\n  useSetBreadcrumbs([\n    { to: '/spent-type', label: 'Spent Type' },\n    { to: `/spent-type/view/${model.id}`, label: model.name },\n  ], 'Edit');\n\n  React.useEffect(() => {\n    formik.setValues(model);\n  }, [model, formik.setValues]);\n\n  return (\n    <AppPaper title={model.name}>\n      <SpentTypeForm formik={formik} />\n    </AppPaper>\n  );\n};\n\nexport default SpentTypeEdit;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { DisplayData } from 'mui-datatables';\n\ninterface Props {\n  displayData: DisplayData;\n  data: Array<{\n    index: number;\n    dataIndex: number;\n  }>;\n  setSelectedRows(rows: number[]): void;\n  onEdit?(id: string): Promise<void>;\n  onDelete?(ids: string[]): Promise<void>;\n}\n\nconst AppToolbarSelect: React.FC<Props> = ({\n  displayData, data, onDelete, onEdit, setSelectedRows,\n}) => {\n  function handleEdit() {\n    const row = displayData.find((_data) => _data.dataIndex === data[0].dataIndex);\n\n    if (row && onEdit) {\n      const [id] = row.data;\n\n      setSelectedRows([]);\n\n      onEdit(id);\n    }\n  }\n\n  function handleDelete() {\n    const rows = displayData.filter((_data) => (\n      data.map((_d) => _d.dataIndex).includes(_data.dataIndex)\n    ));\n\n    if (rows && onDelete) {\n      onDelete(rows.map((_row) => _row.data[0]));\n\n      setSelectedRows([]);\n    }\n  }\n\n  return (\n    <div>\n      {data.length === 1 && onEdit && (\n        <IconButton\n          color=\"inherit\"\n          onClick={handleEdit}\n        >\n          <EditIcon />\n        </IconButton>\n      )}\n      {onDelete && (\n        <IconButton\n          color=\"inherit\"\n          onClick={handleDelete}\n        >\n          <DeleteIcon />\n        </IconButton>\n      )}\n    </div>\n  );\n};\n\nexport default AppToolbarSelect;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport MUIDataTable, { MUIDataTableColumnDef } from 'mui-datatables';\n\nimport { useHistory } from 'react-router-dom';\nimport { useDeleteSpentType, useSpentTypes } from 'spent-type/hooks';\nimport AppToolbarSelect from 'app/components/datatable/toolbar-select';\nimport { useSetBreadcrumbs } from 'app/components/breadcrumbs/hooks';\n\ninterface Props { }\n\nconst columns: MUIDataTableColumnDef[] = [\n  {\n    name: 'id',\n    options: {\n      display: 'excluded',\n    },\n  },\n  {\n    name: 'name',\n    label: 'Name',\n  },\n];\n\nconst SpentTypeHome: React.FC<Props> = () => {\n  const models = useSpentTypes();\n  const history = useHistory();\n  const deleteSpentType = useDeleteSpentType();\n\n  useSetBreadcrumbs([], 'Spent Type');\n\n  const SpentTypeActions = (\n    <Tooltip title=\"New Spent Type\">\n      <IconButton\n        color=\"inherit\"\n        onClick={() => history.push('/spent-type/create')}\n      >\n        <AddIcon />\n      </IconButton>\n    </Tooltip>\n  );\n\n  return (\n    <MUIDataTable\n      title=\"Spent Type List\"\n      columns={columns}\n      data={models.map((model) => ({\n        id: model.id,\n        name: model.name,\n      }))}\n      options={{\n        serverSide: true,\n        filter: false,\n        search: false,\n        customToolbar: () => SpentTypeActions,\n        customToolbarSelect: ({ data }, displayData, setSelectedRows) => (\n          <AppToolbarSelect\n            setSelectedRows={setSelectedRows}\n            displayData={displayData}\n            data={data}\n            onDelete={async (ids) => {\n              ids.forEach((_id) => {\n                deleteSpentType(_id);\n              });\n            }}\n            onEdit={async (_id) => {\n              history.push(`/spent-type/edit/${_id}`);\n            }}\n          />\n        ),\n      }}\n    />\n  );\n};\n\nexport default SpentTypeHome;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  listTitle: {\n    margin: '0px',\n    marginBottom: theme.spacing(2),\n  },\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default useStyles;\n","import { AppRouteInterface } from 'app/components/routes/interfaces';\n\nimport SpentTypeCreate from './pages/create';\nimport SpentTypeEdit from './pages/edit';\nimport SpentTypeHome from './pages/home';\nimport SpentTypeView from './pages/view';\n\nconst SpentTypeRoutes: AppRouteInterface[] = [\n  {\n    path: '/spent-type',\n    Component: SpentTypeHome,\n  },\n  {\n    path: '/spent-type/create',\n    Component: SpentTypeCreate,\n  },\n  {\n    path: '/spent-type/edit/:id',\n    Component: SpentTypeEdit,\n  },\n  {\n    path: '/spent-type/view/:id',\n    Component: SpentTypeView,\n  },\n];\n\nexport default SpentTypeRoutes;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { useDeleteSpentType, useSpentTypeById } from 'spent-type/hooks';\nimport AppPaper from 'app/components/paper';\nimport { useSetBreadcrumbs } from 'app/components/breadcrumbs/hooks';\nimport useStyles from './styles';\n\ninterface Props { }\n\nconst SpentTypeView: React.FC<Props> = () => {\n  const classes = useStyles();\n  const deleteSpentType = useDeleteSpentType();\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n  const model = useSpentTypeById(id);\n\n  async function handleDelete() {\n    history.push('/spent-type');\n    await deleteSpentType(model.id);\n  }\n\n  useSetBreadcrumbs([\n    { to: '/spent-type', label: 'Spent Type' },\n  ], model.name);\n\n  const Actions = (\n    <div>\n      <Tooltip title=\"Delete Spent Type\">\n        <Button\n          startIcon={<DeleteIcon />}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={handleDelete}\n        >\n          Delete\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"Edit Spent Type\">\n        <Button\n          startIcon={<EditIcon />}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => {\n            history.push(`/spent-type/edit/${model.id}`);\n          }}\n        >\n          Edit\n        </Button>\n      </Tooltip>\n    </div>\n  );\n\n  return (\n    <AppPaper title={model.name} actions={Actions}>\n      <List\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        className={classes.root}\n      >\n        <ListItem key={id}>\n          <ListItemText\n            primary={<h4 className={classes.listTitle}>Spent Type Name</h4>}\n            secondary={model.name}\n          />\n        </ListItem>\n      </List>\n    </AppPaper>\n  );\n};\n\nexport default SpentTypeView;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  submit: {\n    float: 'right',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { FormikProps } from 'formik';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { useFilterSpentTypes } from 'spent-type/hooks';\nimport { SpentTypeInterface } from 'spent-type/interfaces';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport useStyles from './styles';\nimport { SpentFormValues } from './interfaces';\n\ninterface Props {\n  formik: FormikProps<SpentFormValues>;\n}\n\nconst SpentForm: React.FC<Props> = ({ formik }) => {\n  const classes = useStyles();\n  const [query, setQuery] = React.useState<string>('');\n  const spentTypes = useFilterSpentTypes(query);\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Grid container spacing={2}>\n        <Grid item md={6} xs={12}>\n          <Autocomplete\n            options={spentTypes}\n            getOptionLabel={(option) => option.name}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Spent Type\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                onChange={({ target }) => {\n                  setQuery(target.value);\n                }}\n              />\n            )}\n            onChange={(el, value) => {\n              if (value) {\n                formik.setFieldValue('spentTypeId', (value as SpentTypeInterface).id);\n              }\n            }}\n            freeSolo\n          />\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <TextField\n            select\n            label=\"Spent Mode\"\n            value={formik.values.mode}\n            onChange={(event) => {\n              formik.setFieldValue('mode', event.target.value);\n            }}\n            fullWidth\n            variant=\"outlined\"\n            margin=\"dense\"\n          >\n            <MenuItem value=\"daily\">\n              Daily\n            </MenuItem>\n            <MenuItem value=\"weekly\">\n              Weekly\n            </MenuItem>\n            <MenuItem value=\"monthly\">\n              Monthly\n            </MenuItem>\n            <MenuItem value=\"repeatable\">\n              Repeatable\n            </MenuItem>\n          </TextField>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <TextField\n            label=\"Name\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            name=\"name\"\n            fullWidth\n            onChange={formik.handleChange}\n            value={formik.values.name}\n            helperText={formik.errors?.name}\n            error={Boolean(formik.errors?.name)}\n          />\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <TextField\n            label=\"Value\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            name=\"value\"\n            fullWidth\n            onChange={formik.handleChange}\n            value={formik.values.value}\n            helperText={formik.errors?.value}\n            error={Boolean(formik.errors?.value)}\n          />\n        </Grid>\n        {/* <Grid item xs={12}>\n          <FormControlLabel\n            control={(\n              <Switch\n                checked={formik.values.repeat}\n                onChange={() => {\n                  formik.setFieldValue('repeat', !formik.values.repeat);\n                }}\n                color=\"primary\"\n                name=\"repeat\"\n              />\n            )}\n            label=\"Repeat\"\n          />\n        </Grid> */}\n        <Grid item xs={12}>\n          <Button className={classes.submit} type=\"submit\" variant=\"outlined\">\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport default SpentForm;\n","import { useFormik, FormikProps } from 'formik';\nimport { SpentFormValues } from './interfaces';\n\nexport function useSpentFormik({\n  onSubmit,\n}: {\n  onSubmit(values: SpentFormValues): Promise<void>;\n}): FormikProps<SpentFormValues> {\n  return useFormik<SpentFormValues>({\n    initialValues: {\n      spentTypeId: '',\n      name: '',\n      value: 0,\n      mode: 'daily',\n    },\n    onSubmit,\n  });\n}\n","import React from 'react';\nimport AppPaper from 'app/components/paper';\nimport SpentForm from 'spent/components/form';\nimport { useStoreSpent } from 'spent/hooks';\nimport { useHistory } from 'react-router-dom';\nimport { useSpentFormik } from 'spent/components/form/hooks';\nimport { useSetBreadcrumbs } from 'app/components/breadcrumbs/hooks';\n\nconst SpentCreate: React.FC = () => {\n  const storeSpent = useStoreSpent();\n  const history = useHistory();\n  const formik = useSpentFormik({\n    async onSubmit(values) {\n      await storeSpent(values);\n\n      history.push('/spent');\n    },\n  });\n\n  useSetBreadcrumbs([\n    { to: '/spent', label: 'Spent' },\n  ], 'Create');\n\n  return (\n    <AppPaper title=\"New Spent\">\n      <SpentForm formik={formik} />\n    </AppPaper>\n  );\n};\n\nexport default SpentCreate;\n","import React from 'react';\nimport AppPaper from 'app/components/paper';\nimport SpentForm from 'spent/components/form';\nimport { useSpentById, useUpdateSpent } from 'spent/hooks';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useSpentFormik } from 'spent/components/form/hooks';\nimport { useSetBreadcrumbs } from 'app/components/breadcrumbs/hooks';\n\nconst SpentEdit: React.FC = () => {\n  const { id } = useParams<{\n    id: string;\n  }>();\n  const model = useSpentById(id);\n  const updateSpent = useUpdateSpent();\n  const history = useHistory();\n\n  const formik = useSpentFormik({\n    async onSubmit(values) {\n      await updateSpent(id, values);\n      history.push('/spent');\n    },\n  });\n\n  React.useEffect(() => {\n    formik.setValues(model);\n  }, [model, formik.setValues]);\n\n  useSetBreadcrumbs([\n    { to: '/spent', label: 'Spent' },\n    { to: `/spent/view/${model.id}`, label: model.name },\n  ], 'Edit');\n\n  return (\n    <AppPaper title={model.name}>\n      <SpentForm formik={formik} />\n    </AppPaper>\n  );\n};\n\nexport default SpentEdit;\n","import React from 'react';\nimport { MUIDataTableToolbar, TableToolbar } from 'mui-datatables';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { useSetSpentTableTab, useSpentTableTab } from 'spent/hooks';\n\nconst SpentTableToolbar: React.FC<MUIDataTableToolbar> = (props) => {\n  const tableTab = useSpentTableTab();\n  const setTableTab = useSetSpentTableTab();\n\n  return (\n    <>\n      <Tabs\n        value={tableTab}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={(event, newValue) => {\n          setTableTab(newValue);\n        }}\n      >\n        <Tab label=\"Daily\" value=\"daily\" />\n        <Tab label=\"Weekly\" value=\"weekly\" />\n        <Tab label=\"Monthly\" value=\"monthly\" />\n        <Tab label=\"Repeatable\" value=\"repeatable\" />\n        <Tab label=\"Total\" value=\"total\" />\n      </Tabs>\n      <TableToolbar {...props} />\n    </>\n  );\n};\n\nexport default SpentTableToolbar;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport MUIDataTable, { MUIDataTableColumnDef } from 'mui-datatables';\n\nimport { useHistory } from 'react-router-dom';\nimport { useDeleteSpent, useSpentTable } from 'spent/hooks';\nimport AppToolbarSelect from 'app/components/datatable/toolbar-select';\nimport { useSetBreadcrumbs } from 'app/components/breadcrumbs/hooks';\nimport SpentTableToolbar from 'spent/components/table/toolbar';\n\ninterface Props { }\n\nconst columns: MUIDataTableColumnDef[] = [\n  {\n    name: 'id',\n    options: {\n      display: 'excluded',\n    },\n  },\n  {\n    name: 'name',\n    label: 'Name',\n  },\n  {\n    name: 'value',\n    label: 'Value',\n  },\n  {\n    name: 'mode',\n    label: 'Mode',\n  },\n];\n\nconst SpentHome: React.FC<Props> = () => {\n  const models = useSpentTable();\n  const history = useHistory();\n  const deleteSpent = useDeleteSpent();\n\n  useSetBreadcrumbs([], 'Spent');\n\n  const SpentActions = (\n    <Tooltip title=\"New Spent\">\n      <IconButton\n        color=\"inherit\"\n        onClick={() => history.push('/spent/create')}\n      >\n        <AddIcon />\n      </IconButton>\n    </Tooltip>\n  );\n\n  return (\n    <MUIDataTable\n      title=\"Spent List\"\n      columns={columns}\n      data={models.map((model) => ({\n        id: model.id,\n        name: model.name,\n        value: model.value,\n        mode: model.mode,\n      }))}\n      options={{\n        serverSide: true,\n        filter: false,\n        search: false,\n        customToolbar: () => SpentActions,\n        customToolbarSelect: ({ data }, displayData, setSelectedRows) => (\n          <AppToolbarSelect\n            setSelectedRows={setSelectedRows}\n            displayData={displayData}\n            data={data}\n            onDelete={async (ids) => {\n              ids.forEach((_id) => {\n                deleteSpent(_id);\n              });\n            }}\n            onEdit={async (_id) => {\n              history.push(`/spent/edit/${_id}`);\n            }}\n          />\n        ),\n      }}\n      components={{\n        TableToolbar: SpentTableToolbar,\n      }}\n    />\n  );\n};\n\nexport default SpentHome;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  listTitle: {},\n}));\n\nexport default useStyles;\n","import { AppRouteInterface } from 'app/components/routes/interfaces';\n\nimport SpentCreate from './pages/create';\nimport SpentEdit from './pages/edit';\nimport SpentHome from './pages/home';\nimport SpentView from './pages/view';\n\nconst SpentRoutes: AppRouteInterface[] = [\n  {\n    path: '/spent',\n    Component: SpentHome,\n  },\n  {\n    path: '/spent/create',\n    Component: SpentCreate,\n  },\n  {\n    path: '/spent/edit/:id',\n    Component: SpentEdit,\n  },\n  {\n    path: '/spent/view/:id',\n    Component: SpentView,\n  },\n];\n\nexport default SpentRoutes;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { useDeleteSpent, useSpentById } from 'spent/hooks';\nimport AppPaper from 'app/components/paper';\nimport { useSetBreadcrumbs } from 'app/components/breadcrumbs/hooks';\nimport useStyles from './styles';\n\ninterface Props { }\n\nconst SpentView: React.FC<Props> = () => {\n  const classes = useStyles();\n  const deleteSpent = useDeleteSpent();\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n  const model = useSpentById(id);\n\n  async function handleDelete() {\n    history.push('/spent');\n    await deleteSpent(model.id);\n  }\n\n  useSetBreadcrumbs([\n    { to: '/spent', label: 'Spent' },\n  ], model.name);\n\n  const Actions = (\n    <div>\n      <Tooltip title=\"Delete Spent\">\n        <Button\n          startIcon={<DeleteIcon />}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={handleDelete}\n        >\n          Delete\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"Edit Spent\">\n        <Button\n          startIcon={<EditIcon />}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => {\n            history.push(`/spent/edit/${model.id}`);\n          }}\n        >\n          Edit\n        </Button>\n      </Tooltip>\n    </div>\n  );\n\n  return (\n    <AppPaper title={model.name} actions={Actions}>\n      <List\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        className={classes.root}\n      >\n        <ListItem key={id}>\n          <ListItemText\n            primary={<h4 className={classes.listTitle}>Spent Name</h4>}\n            secondary={model.name}\n          />\n        </ListItem>\n      </List>\n    </AppPaper>\n  );\n};\n\nexport default SpentView;\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\ninterface Props {\n  inputRef: (instance: NumberFormat | null) => void;\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nconst AppMoneyFormat: React.FC<Props> = ({\n  inputRef, onChange, name, ...others\n}) => (\n  <NumberFormat\n    {...others}\n    getInputRef={inputRef}\n    onValueChange={(values) => {\n      onChange({\n        target: {\n          name,\n          value: values.value,\n        },\n      });\n    }}\n    thousandSeparator\n    isNumericString\n    prefix=\"$\"\n  />\n);\n\nexport default AppMoneyFormat;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  submit: {\n    float: 'right',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { FormikProps } from 'formik';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport AppMoneyFormat from 'app/components/number-format/money-format';\n\nimport useStyles from './styles';\nimport { UserConfigFormValues } from './interfaces';\n\ninterface Props {\n  formik: FormikProps<UserConfigFormValues>;\n}\n\nconst UserConfigForm: React.FC<Props> = ({ formik }) => {\n  const classes = useStyles();\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Grid container spacing={2}>\n        <Grid item md={6} xs={12}>\n          <TextField\n            label=\"Daily Goal\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            name=\"dailyGoal\"\n            fullWidth\n            onChange={formik.handleChange}\n            value={formik.values.dailyGoal ? formik.values.dailyGoal : null}\n            helperText={formik.errors?.dailyGoal}\n            error={Boolean(formik.errors?.dailyGoal)}\n            InputProps={{\n              inputComponent: AppMoneyFormat as any,\n            }}\n          />\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <TextField\n            label=\"Week Goal\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            name=\"weekGoal\"\n            fullWidth\n            onChange={formik.handleChange}\n            value={formik.values.weekGoal ? formik.values.weekGoal : null}\n            helperText={formik.errors?.weekGoal}\n            error={Boolean(formik.errors?.weekGoal)}\n            InputProps={{\n              inputComponent: AppMoneyFormat as any,\n            }}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            label=\"Mounth Goal\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            name=\"mounthGoal\"\n            fullWidth\n            onChange={formik.handleChange}\n            value={formik.values.mounthGoal ? formik.values.mounthGoal : null}\n            helperText={formik.errors?.mounthGoal}\n            error={Boolean(formik.errors?.mounthGoal)}\n            InputProps={{\n              inputComponent: AppMoneyFormat as any,\n            }}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            label=\"Repeatable Goal\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            name=\"repeatableGoal\"\n            fullWidth\n            onChange={formik.handleChange}\n            value={formik.values.repeatableGoal ? formik.values.repeatableGoal : null}\n            helperText={formik.errors?.repeatableGoal}\n            error={Boolean(formik.errors?.repeatableGoal)}\n            InputProps={{\n              inputComponent: AppMoneyFormat as any,\n            }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button className={classes.submit} type=\"submit\" variant=\"outlined\">\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport default UserConfigForm;\n","import React from 'react';\nimport AppPaper from 'app/components/paper';\nimport UserConfigForm from 'user-config/components/form';\nimport { useUserConfigFormik } from 'user-config/components/form/hooks';\nimport { useSetUserConfig, useUserConfig } from 'user-config/hooks';\nimport { useHistory } from 'react-router-dom';\nimport { useSetBreadcrumbs } from 'app/components/breadcrumbs/hooks';\n\ninterface Props { }\n\nconst UserConfigEdit: React.FC<Props> = () => {\n  const model = useUserConfig();\n  const setUserConfig = useSetUserConfig();\n  const history = useHistory();\n\n  const formik = useUserConfigFormik({\n    async onSubmit(values) {\n      await setUserConfig(values);\n      history.push('/user-config');\n    },\n  });\n\n  React.useEffect(() => {\n    formik.setValues(model);\n  }, [model, formik.setValues]);\n\n  useSetBreadcrumbs([\n    { to: '/user-config', label: 'Settings' },\n  ], 'Edit');\n\n  return (\n    <AppPaper title=\"Edit Settings\">\n      <UserConfigForm formik={formik} />\n    </AppPaper>\n  );\n};\n\nexport default UserConfigEdit;\n","import { useFormik, FormikProps } from 'formik';\nimport { UserConfigFormValues } from './interfaces';\n\nexport function useUserConfigFormik({\n  onSubmit,\n}: {\n  onSubmit(values: UserConfigFormValues): Promise<void>;\n}): FormikProps<UserConfigFormValues> {\n  return useFormik<UserConfigFormValues>({\n    initialValues: {\n      dailyGoal: 0,\n      weekGoal: 0,\n      mounthGoal: 0,\n      repeatableGoal: 0,\n    },\n    onSubmit,\n  });\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  listTitle: {\n    margin: '0px',\n    marginBottom: theme.spacing(2),\n  },\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    height: '100%',\n  },\n  title: {\n    fontSize: 12,\n  },\n}));\n\nexport default useStyles;\n","import { AppRouteInterface } from 'app/components/routes/interfaces';\nimport UserConfigEdit from './pages/edit';\n\nimport UserConfigHome from './pages/home';\n\nconst UserConfigRoutes: AppRouteInterface[] = [\n  {\n    path: '/user-config',\n    Component: UserConfigHome,\n  },\n  {\n    path: '/user-config/edit',\n    Component: UserConfigEdit,\n  },\n];\n\nexport default UserConfigRoutes;\n","import React from 'react';\nimport AppPaper from 'app/components/paper';\nimport { useUserConfig } from 'user-config/hooks';\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip';\nimport Button from '@material-ui/core/Button/Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useHistory } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport { useSetBreadcrumbs } from 'app/components/breadcrumbs/hooks';\nimport useStyles from './styles';\n\ninterface Props { }\n\nconst UserConfigHome: React.FC<Props> = () => {\n  const classes = useStyles();\n  const model = useUserConfig();\n  const history = useHistory();\n  const today = new Date();\n  const currentMounth = new Date();\n  currentMounth.setDate(0);\n\n  const dailyGoalInFullMounth = currentMounth.getDate() * +model.dailyGoal;\n  const dailyGoalInRelativeMounth = (currentMounth.getDate() - today.getDate()) * +model.dailyGoal;\n  const weekGoalInFullMounth = 4 * +model.weekGoal;\n\n  const total = weekGoalInFullMounth\n    + +model.mounthGoal + dailyGoalInFullMounth + +model.repeatableGoal;\n\n  useSetBreadcrumbs([], 'Settings');\n\n  const Actions = (\n    <div>\n      <Tooltip title=\"Edit Settings\">\n        <Button\n          startIcon={<EditIcon />}\n          variant=\"outlined\"\n          onClick={() => {\n            history.push('/user-config/edit');\n          }}\n        >\n          Edit\n        </Button>\n      </Tooltip>\n    </div>\n  );\n\n  return (\n    <AppPaper title=\"Settings\" actions={Actions}>\n      <Grid container spacing={2}>\n        <Grid item md={6}>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h2\">\n                Daily Goal\n              </Typography>\n              <Typography color=\"textSecondary\">\n                $\n                {' '}\n                {model.dailyGoal}\n                {' '}\n                per day\n              </Typography>\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                *\n                {' '}\n                {currentMounth.getDate()}\n                {' '}\n                days\n                {' '}\n                =\n                {' '}\n                $\n                {' '}\n                {dailyGoalInFullMounth}\n              </Typography>\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                *\n                {' '}\n                {currentMounth.getDate() - today.getDate()}\n                {' '}\n                days\n                {' '}\n                =\n                {' '}\n                $\n                {' '}\n                {dailyGoalInRelativeMounth}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item md={6}>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h2\">\n                Week Goal\n              </Typography>\n              <Typography color=\"textSecondary\">\n                $\n                {' '}\n                {model.weekGoal}\n                {' '}\n                per week\n              </Typography>\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                * 4 weeks = $\n                {' '}\n                {weekGoalInFullMounth}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item md={6}>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h2\">\n                Mounth Goal\n              </Typography>\n              <Typography color=\"textSecondary\">\n                $\n                {' '}\n                {model.mounthGoal}\n                {' '}\n                per mounth\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item md={6}>\n          <Card className={classes.root} variant=\"outlined\">\n            <CardContent>\n              <Typography variant=\"h6\" component=\"h2\">\n                Repeatable\n              </Typography>\n              <Typography color=\"textSecondary\">\n                $\n                {' '}\n                {model.repeatableGoal}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item md={6}>\n          <Typography variant=\"h6\" gutterBottom>\n            Total:\n            {' '}\n            {total}\n          </Typography>\n        </Grid>\n      </Grid>\n    </AppPaper>\n  );\n};\n\nexport default UserConfigHome;\n","import AppDashboard from 'app/pages/dashboard';\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport SpentTypeRoutes from 'spent-type/routes';\nimport SpentRoutes from 'spent/routes';\nimport UserConfigRoutes from 'user-config/routes';\n\nconst AppRoutes: React.FC = () => (\n  <Switch>\n    {SpentRoutes.map(({ path, Component }) => (\n      <Route key={path} path={path}>\n        <Component />\n      </Route>\n    ))}\n\n    {SpentTypeRoutes.map(({ path, Component }) => (\n      <Route key={path} path={path}>\n        <Component />\n      </Route>\n    ))}\n\n    {UserConfigRoutes.map(({ path, Component }) => (\n      <Route key={path} path={path}>\n        <Component />\n      </Route>\n    ))}\n\n    {/* fallback */}\n    <Route path=\"/\">\n      <AppDashboard />\n    </Route>\n  </Switch>\n);\n\nexport default AppRoutes;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n    backgroundColor: '#fafafa',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  current: {\n    color: theme.palette.grey[500],\n  },\n  icon: {\n    color: theme.palette.primary.main,\n  },\n  root: {\n    marginBottom: theme.spacing(1),\n    '& .MuiBreadcrumbs-separator': {\n      marginLeft: 0,\n      marginRight: 0,\n    },\n    '& .MuiBreadcrumbs-ol': {\n      justifyContent: 'flex-end',\n    },\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\n\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Link } from 'react-router-dom';\nimport { useAppBreadcrumbCurrent, useAppBreadcrumbList } from './hooks';\nimport useStyles from './styles';\n\ninterface Props { }\n\nconst AppBreadcrumbs: React.FC<Props> = () => {\n  const classes = useStyles();\n  const breadcrumbList = useAppBreadcrumbList();\n  const breadcrumbCurrent = useAppBreadcrumbCurrent();\n\n  return (\n    <Breadcrumbs className={classes.root} separator={<NavigateNextIcon className={classes.icon} />} aria-label=\"breadcrumb\">\n      {breadcrumbList.map((breadcrumbItem) => (\n        <Link key={breadcrumbItem.to} className={classes.link} to={breadcrumbItem.to}>\n          {breadcrumbItem.label}\n        </Link>\n      ))}\n      <Typography className={classes.current}>{breadcrumbCurrent}</Typography>\n    </Breadcrumbs>\n  );\n};\n\nexport default AppBreadcrumbs;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport AppHeader from './components/header';\nimport AppDrawer from './components/drawer';\nimport AppRoutes from './components/routes';\n\nimport useStyles from './styles';\nimport AppBreadcrumbs from './components/breadcrumbs';\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  const [openDrawer, setOpenDrawer] = React.useState<boolean>(true);\n\n  console.log(process.env.REACT_APP_BASE_URL);\n\n  return (\n    <Router basename={process.env.REACT_APP_BASE_URL || undefined}>\n      <div className={classes.root}>\n        <AppHeader drawerState={openDrawer} setDrawerState={setOpenDrawer} />\n        <AppDrawer drawerState={openDrawer} setDrawerState={setOpenDrawer} />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <AppBreadcrumbs />\n            <AppRoutes />\n          </Container>\n        </main>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\n\nimport theme from 'app/config/theme';\nimport { persistor, store } from 'app/store';\nimport App from './app';\n\nimport 'index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}